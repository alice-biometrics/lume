name: ci

on:
  pull_request:
    paths-ignore:
      - '*.md'
      - 'VERSION'
    branches: 
      - master
  push:
    paths-ignore:
      - '*.md'
      - 'VERSION'
    branches:
      - master


jobs:
  ci:

    strategy:
      max-parallel: 4
      matrix:
        os: [macOS-latest, ubuntu-latest]
        python-version: [3.6, 3.7, 3.8]
    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v1
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - uses: actions/cache@v1
      if: startsWith(runner.os, 'macOS')
      with:
        path: ~/Library/Caches/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - uses: actions/cache@v1
      if: startsWith(runner.os, 'Windows')
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        pip install -r requirements/dev.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        black .
        flake8 .
    - name: Test with pytest
      run: |
        pip install -e .
        pip install pytest
        pytest
    - name: End2end test
      env:
        LUME_CONFIG_FILENAME: examples/lume-sample.yml
      run: |
        lume -all

    - name: No binary installation
      run: |
        python setup.py sdist
        pip wheel --no-binary lume -w /tmp/ext dist/lume-*.tar.gz



