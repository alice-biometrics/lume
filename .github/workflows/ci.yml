name: ci

on:
  pull_request:
    paths-ignore:
      - '*.md'
      - 'lume/VERSION'
    branches: 
      - main

jobs:
  ci:
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest]
        python-version: ['3.8', '3.9', '3.10', "3.11", "3.12"]
    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
        cache-dependency-path: '**/*requirements.txt'
    - name: Install
      run: |
        pip install -e .
        lume -install
    - name: Lint
      run: lume -lint
    - name: Static Analysis
      run: lume -static-analysis
    - name: Tests
      run: lume -test
    - name: Check Installation (--no-binary)
      run: lume -check-no-binary-installation
    - name: End2end test
      env:
        LUME_CONFIG_FILENAME: examples/lume-sample.yml
      run: lume -install -all
    - name: End2end test (call unavailable command )
      env:
        LUME_CONFIG_FILENAME: examples/lume-sample.yml
      run: lume -unavailable-command | true
    - name: End2end test (check commands)
      env:
        LUME_CONFIG_FILENAME: examples/lume-sample.yml
      run: |
         lume -check test
         lume -check other:step-1
         lume -check other:step-2
         lume -check notexistcommand | true
    - name: End2end test (call unavailable command `--no-strict` mode)
      env:
        LUME_CONFIG_FILENAME: examples/lume-sample.yml
      run: lume -unavailable-command --no-strict
    - name: End2end test (call unavailable command with no strict env var)
      env:
        LUME_CONFIG_FILENAME: examples/lume-sample.yml
        LUME_NO_STRICT: true
      run: lume -unavailable-command
    - name: End2end test (OS-Specific Commands)
      env:
        LUME_CONFIG_FILENAME: examples/lume-sample-os-command-specific.yml
      run: lume -install -all
    - name: End2end test (Required env - internal)
      env:
        LUME_CONFIG_FILENAME: examples/lume-required-env-with-env.yml
      run: lume -install -all
    - name: End2end test (Required env - external)
      env:
        LUME_CONFIG_FILENAME: examples/lume-required-env-without-env.yml
        MY_NON_EXPECTED_REQUIRED_ENV: VALUE
      run: lume -install -all
    - name: End2end test (Required env - fails)
      env:
        LUME_CONFIG_FILENAME: examples/lume-required-env-without-env.yml
      run: lume -install -all | true
    - name: End2end test (Required env not found but use --no-strict mode)
      env:
        LUME_CONFIG_FILENAME: examples/lume-required-env-without-env.yml
      run: lume -install -all --no-strict
    - name: End2end test (Required env not found but use --no-strict mode with env)
      env:
        LUME_CONFIG_FILENAME: examples/lume-required-env-without-env.yml
        LUME_NO_STRICT: true
      run: lume -install -all
    - name: End2end test (Error syntax - fails)
      env:
        LUME_CONFIG_FILENAME: examples/lume-sample-with-syntax-error.yml
      run: lume -job | true

